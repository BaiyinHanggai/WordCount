if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
if (i == (count - 1))
		{
			blockSize = fileSize;
		}
		info[i].dwBlockBytes = blockSize;
		info[i].qwFileOffset = fileOffset;
		info[i].mapFileH = mapH;
